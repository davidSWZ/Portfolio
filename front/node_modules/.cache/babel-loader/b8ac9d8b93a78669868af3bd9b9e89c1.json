{"ast":null,"code":"var _jsxFileName = \"/Users/davidswiatkiewiez/Documents/Programmation/swz/frontend/src/components/competence-edit.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nexport default class CompetenceEdit extends Component {\n  constructor(props) {\n    super(props);\n    this.addCompetence = this.addCompetence.bind(this);\n    this.onChangeCompetence = this.onChangeCompetence.bind(this);\n    this.handleRemove = this.handleRemove.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.state = {\n      competence: [],\n      idCount: 0\n    };\n  }\n\n  componentDidMount() {\n    let that = this;\n    axios.get('http://localhost:4000/competence').then(res => {\n      res.data.forEach(function (competence) {\n        that.setState({\n          competence: [...that.state.competence, competence.value]\n        });\n      });\n      that.setState({\n        idCount: res.data.length\n      });\n      console.log(this.state);\n    }).catch(err => {\n      console.log('A problem occured!!');\n    });\n  }\n\n  addCompetence() {\n    this.setState({\n      competence: [...this.state.competence, {\n        value: '',\n        id: this.state.idCount\n      }]\n    });\n    this.setState({\n      idCount: this.state.idCount + 1\n    });\n  }\n\n  onChangeCompetence(e, index) {\n    this.state.competence[index].value = e.target.value;\n    this.setState({\n      competence: this.state.competence\n    });\n  }\n\n  handleRemove(index) {\n    this.state.competence.splice(index, 1);\n    this.setState({\n      competence: this.state.competence\n    });\n  }\n\n  onSubmit(e) {\n    let competences = this.state.competence; // axios.get('http://localhost:4000/competence')\n    //   .then(res => {\n    //     if(res.data.length != 0) {\n    //       let newElement = true;\n    //       competences.forEach(function(competence) {\n    //         res.data.forEach(function(dbCompetence) {\n    //           if(dbCompetence.id == competence.id) {\n    //             const competenceUpdate = {\n    //               competence : competence.value\n    //             }\n    //             axios.post('http://localhost:4000/competence/update/dbCompetence._id', competenceUpdate)\n    //               .then(res => console.log(\"Competence updated\"))\n    //               .catch(function(err) {\n    //                 console.log(err);\n    //               })\n    //             newElement = false;\n    //           }\n    //         })\n    //       })\n    //     } else {\n    // axios.delete('http://localhost:4000/competence/delete', {data:{}})\n    //   .then(res => {\n\n    competences.forEach(function (competence) {\n      let competenceAdded = {\n        competence: competence.value,\n        id: competence.id\n      };\n      axios.post('http://localhost:4000/competence/add', competenceAdded).then(res => {\n        console.log(competenceAdded);\n      }).catch(function (err) {\n        console.log(err);\n      });\n    }); // })\n    // .catch(function(err) {\n    //   console.log(err);\n    // })\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"mt-5 border-bottom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Mes comp\\xE9tences\"), this.state.competence.map((competence, index) => {\n      return React.createElement(\"div\", {\n        key: index,\n        className: \"mb-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        value: competence,\n        onChange: e => this.onChangeCompetence(e, index),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"ml-2 btn btn-danger\",\n        onClick: () => this.handleRemove(index),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \" Supprimer\"));\n    }), React.createElement(\"button\", {\n      className: \"btn btn-primary mt-2 mb-2\",\n      onClick: this.addCompetence,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Ajouter une comp\\xE9tence\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-success mb-2\",\n      onClick: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Enregistrer\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/davidswiatkiewiez/Documents/Programmation/swz/frontend/src/components/competence-edit.js"],"names":["React","Component","axios","CompetenceEdit","constructor","props","addCompetence","bind","onChangeCompetence","handleRemove","onSubmit","state","competence","idCount","componentDidMount","that","get","then","res","data","forEach","setState","value","length","console","log","catch","err","id","e","index","target","splice","competences","competenceAdded","post","render","map"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\n\nexport default class CompetenceEdit extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.addCompetence = this.addCompetence.bind(this);\n    this.onChangeCompetence = this.onChangeCompetence.bind(this);\n    this.handleRemove = this.handleRemove.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n\n    this.state={\n      competence:[],\n      idCount:0\n    }\n  }\n\n  componentDidMount() {\n    let that = this;\n\n    axios.get('http://localhost:4000/competence')\n      .then(res => {\n        res.data.forEach(function(competence) {\n          that.setState({competence: [...that.state.competence, competence.value]})\n        });\n        that.setState({idCount: res.data.length})\n        console.log(this.state)\n      })\n      .catch(err => {\n        console.log('A problem occured!!')\n      });\n  }\n\n  addCompetence() {\n    this.setState({\n      competence: [...this.state.competence, {value:'', id:this.state.idCount}],\n    });\n    this.setState({\n      idCount:this.state.idCount+1\n    })\n  }\n\n  onChangeCompetence(e, index) {\n    this.state.competence[index].value = e.target.value;\n\n    this.setState({competence: this.state.competence})\n  }\n\n  handleRemove(index) {\n    this.state.competence.splice(index, 1)\n\n    this.setState({ competence : this.state.competence})\n  }\n\n  onSubmit(e) {\n    let competences = this.state.competence;\n    // axios.get('http://localhost:4000/competence')\n    //   .then(res => {\n    //     if(res.data.length != 0) {\n    //       let newElement = true;\n    //       competences.forEach(function(competence) {\n    //         res.data.forEach(function(dbCompetence) {\n    //           if(dbCompetence.id == competence.id) {\n    //             const competenceUpdate = {\n    //               competence : competence.value\n    //             }\n    //             axios.post('http://localhost:4000/competence/update/dbCompetence._id', competenceUpdate)\n    //               .then(res => console.log(\"Competence updated\"))\n    //               .catch(function(err) {\n    //                 console.log(err);\n    //               })\n    //             newElement = false;\n    //           }\n    //         })\n    //       })\n    //     } else {\n\n    // axios.delete('http://localhost:4000/competence/delete', {data:{}})\n    //   .then(res => {\n        competences.forEach(function(competence) {\n          let competenceAdded = {\n            competence : competence.value,\n            id : competence.id\n          }\n          axios.post('http://localhost:4000/competence/add', competenceAdded)\n          .then(res => {console.log(competenceAdded)})\n          .catch(function(err) {\n            console.log(err);\n          })\n        })\n      // })\n      // .catch(function(err) {\n      //   console.log(err);\n      // })\n  }\n\n  render() {\n    return (\n      <div className='mt-5 border-bottom'>\n        <h2>Mes compétences</h2>\n        {\n          this.state.competence.map((competence, index) => {\n            return(\n              <div key={index} className='mb-2'>\n                <input  value={competence}\n                        onChange={(e) => this.onChangeCompetence(e, index)}\n                        />\n                <button className='ml-2 btn btn-danger'\n                        onClick={() => this.handleRemove(index)}\n                        > Supprimer\n                </button>\n              </div>\n            )\n          })\n        }\n        <button className='btn btn-primary mt-2 mb-2'\n                onClick={this.addCompetence}\n                >Ajouter une compétence\n        </button>\n        <div>\n          <button className='btn btn-success mb-2'\n                  onClick={this.onSubmit}\n                  >Enregistrer\n          </button>\n        </div>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}