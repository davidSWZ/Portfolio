{"ast":null,"code":"var _jsxFileName = \"/Users/davidswiatkiewiez/Documents/Programmation/swz/frontend/src/components/cv-edit.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport update from 'react-addons-update';\nexport default class CVEdit extends Component {\n  constructor(props) {\n    super(props);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.addExperience = this.addExperience.bind(this);\n    this.onChangeExperienceTitle = this.onChangeExperienceTitle.bind(this);\n    this.onChangeExperienceWhere = this.onChangeExperienceWhere.bind(this);\n    this.onChangeExperienceWhen = this.onChangeExperienceWhen.bind(this);\n    this.onChangeExperienceDescription = this.onChangeExperienceDescription.bind(this);\n    this.handleRemove = this.handleRemove.bind(this);\n    this.state = {\n      experience: []\n    };\n  }\n\n  componentDidMount() {\n    let that = this;\n    axios.get('http://localhost:4000/experience').then(res => {\n      res.data.forEach(function (experience) {\n        that.setState({\n          experience: [...that.state.experience, {\n            title: experience.title,\n            where: experience.where,\n            when: experience.when,\n            description: experience.description\n          }]\n        });\n      });\n    }).catch(err => {\n      console.log('A problem occured');\n    });\n  }\n\n  addExperience() {\n    this.setState({\n      experience: [...this.state.experience, {\n        title: '',\n        where: '',\n        when: '',\n        description: ''\n      }]\n    });\n  }\n\n  onChangeExperienceTitle(e, index) {\n    this.setState({\n      experience: update(this.state.experience, {\n        index: {\n          title: {\n            $set: e.target.value\n          }\n        }\n      })\n    }); // this.state.experience[index].title = e.target.value);\n    // this.setState({experience:this.state.experience});\n  }\n\n  onChangeExperienceWhere(e, index) {\n    this.state.experience[index].where = e.target.value;\n    this.setState({\n      experience: this.state.experience\n    });\n  }\n\n  onChangeExperienceWhen(e, index) {\n    this.state.experience[index].when = e.target.value;\n    this.setState({\n      experience: this.state.experience\n    });\n  }\n\n  onChangeExperienceDescription(e, index) {\n    this.state.experience[index].description = e.target.value;\n    this.setState({\n      experience: this.state.experience\n    });\n  }\n\n  handleRemove(index) {\n    this.state.experience.splice(index, 1);\n    this.setState({\n      experience: this.state.experience\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    let experiences = this.state.experience;\n    axios.delete('http://localhost:4000/experience/delete', {\n      data: {}\n    }).then(experiences.forEach(function (experience) {\n      axios.post('http://localhost:4000/experience/add', experience).then(res => {\n        console.log(experience);\n      }).catch(function (err) {\n        console.log(err);\n      });\n    })).catch(function (err) {\n      console.log(err);\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"mt-5 border-bottom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \" Mes exp\\xE9riences \"), this.state.experience.map((exp, index) => {\n      return React.createElement(\"div\", {\n        key: index,\n        className: \"mb-2 border-bottom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        className: \"mb-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"newTitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Titre du poste\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        id: \"newTitle\",\n        value: exp.title,\n        onChange: e => {\n          this.onChangeExperienceTitle(e, index);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"newWhere\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"O\\xFA\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        id: \"newWhere\",\n        value: exp.where,\n        onChange: e => {\n          this.onChangeExperienceWhere(e, index);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"newWhen\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, \"Quand\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        id: \"newWhen\",\n        value: exp.when,\n        onChange: e => {\n          this.onChangeExperienceWhen(e, index);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"newDescription\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, \"Description\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        type: \"text\",\n        id: \"newDescription\",\n        value: exp.description,\n        onChange: e => {\n          this.onChangeExperienceDescription(e, index);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }))))), React.createElement(\"button\", {\n        className: \"btn btn-danger mb-2\",\n        onClick: () => {\n          this.handleRemove(index);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, \"Supprimer\"));\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: this.addExperience,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, \"Ajouter une exp\\xE9rience\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-success mt-2 mb-2\",\n      onClick: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"Enregistrer\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/davidswiatkiewiez/Documents/Programmation/swz/frontend/src/components/cv-edit.js"],"names":["React","Component","axios","update","CVEdit","constructor","props","onSubmit","bind","addExperience","onChangeExperienceTitle","onChangeExperienceWhere","onChangeExperienceWhen","onChangeExperienceDescription","handleRemove","state","experience","componentDidMount","that","get","then","res","data","forEach","setState","title","where","when","description","catch","err","console","log","e","index","$set","target","value","splice","preventDefault","experiences","delete","post","render","map","exp"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\nimport update from 'react-addons-update';\n\nexport default class CVEdit extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = this.onSubmit.bind(this);\n    this.addExperience = this.addExperience.bind(this);\n    this.onChangeExperienceTitle = this.onChangeExperienceTitle.bind(this);\n    this.onChangeExperienceWhere = this.onChangeExperienceWhere.bind(this);\n    this.onChangeExperienceWhen = this.onChangeExperienceWhen.bind(this);\n    this.onChangeExperienceDescription = this.onChangeExperienceDescription.bind(this);\n    this.handleRemove = this.handleRemove.bind(this);\n\n    this.state={\n      experience : []\n    }\n  }\n\n  componentDidMount() {\n    let that = this;\n\n    axios.get('http://localhost:4000/experience')\n      .then(res => {\n        res.data.forEach(function(experience) {\n          that.setState({experience: [...that.state.experience,\n            { title:experience.title,\n              where:experience.where,\n              when:experience.when,\n              description:experience.description\n            }\n          ]})\n        });\n      })\n      .catch(err => {\n        console.log('A problem occured')\n      });\n  }\n\n\n  addExperience() {\n    this.setState({experience: [...this.state.experience, {title:'', where:'', when:'', description:''}]})\n  }\n\n  onChangeExperienceTitle(e, index) {\n    this.setState({\n      experience: update(this.state.experience, {index: {title: {$set: e.target.value}}})\n    })\n\n      // this.state.experience[index].title = e.target.value);\n\n    // this.setState({experience:this.state.experience});\n  }\n\n  onChangeExperienceWhere(e, index) {\n    this.state.experience[index].where = e.target.value;\n\n    this.setState({experience:this.state.experience});\n  }\n\n  onChangeExperienceWhen(e, index) {\n    this.state.experience[index].when = e.target.value;\n\n    this.setState({experience:this.state.experience});\n  }\n\n  onChangeExperienceDescription(e, index) {\n    this.state.experience[index].description = e.target.value;\n\n    this.setState({experience:this.state.experience});\n  }\n\n  handleRemove(index) {\n    this.state.experience.splice(index, 1);\n\n    this.setState({experience:this.state.experience});\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    let experiences = this.state.experience;\n\n    axios.delete('http://localhost:4000/experience/delete', {data:{}})\n      .then(\n        experiences.forEach(function(experience) {\n\n          axios.post('http://localhost:4000/experience/add', experience)\n          .then(res => {console.log(experience)})\n          .catch(function(err) {\n            console.log(err);\n          })\n        })\n      )\n      .catch(function(err) {\n        console.log(err);\n      })\n  }\n\n  render() {\n    return (\n      <div className='mt-5 border-bottom'>\n        <h2> Mes expériences </h2>\n          {\n            this.state.experience.map((exp, index) => {\n              return(\n                <div key={index} className='mb-2 border-bottom'>\n                  <table className='mb-2'>\n                    <tbody>\n                      <tr>\n                        <td>\n                          <label htmlFor='newTitle'>Titre du poste</label>\n                        </td>\n                        <td>\n                          <input  type='text'\n                                  id='newTitle'\n                                  value={exp.title}\n                                  onChange={(e) => {this.onChangeExperienceTitle(e, index)}}\n                                  />\n                        </td>\n                      </tr>\n                      <tr>\n                        <td>\n                          <label htmlFor='newWhere'>Oú</label>\n                        </td>\n                        <td>\n                          <input  type='text'\n                                  id='newWhere'\n                                  value={exp.where}\n                                  onChange={(e) => {this.onChangeExperienceWhere(e, index)}}\n                                  />\n                        </td>\n                      </tr>\n                      <tr>\n                        <td>\n                          <label htmlFor='newWhen'>Quand</label>\n                        </td>\n                        <td>\n                          <input  type='text'\n                                  id='newWhen'\n                                  value={exp.when}\n                                  onChange={(e) => {this.onChangeExperienceWhen(e, index)}}\n                                  />\n                        </td>\n                      </tr>\n                      <tr>\n                        <td>\n                          <label htmlFor='newDescription'>Description</label>\n                        </td>\n                        <td>\n                          <textarea  type='text'\n                                  id='newDescription'\n                                  value={exp.description}\n                                  onChange={(e) => {this.onChangeExperienceDescription(e, index)}}\n                                  >\n                          </textarea>\n                        </td>\n                      </tr>\n                    </tbody>\n                  </table>\n                  <button className='btn btn-danger mb-2'\n                          onClick={() => {this.handleRemove(index)}}\n                          >\n                    Supprimer\n                  </button>\n                </div>\n              )\n            })\n          }\n        <div>\n          <button className='btn btn-primary'\n                  onClick = {this.addExperience}\n                  >Ajouter une expérience\n          </button>\n        </div>\n        <div>\n          <button className='btn btn-success mt-2 mb-2'\n                  onClick = {this.onSubmit}\n                  >Enregistrer\n          </button>\n        </div>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}