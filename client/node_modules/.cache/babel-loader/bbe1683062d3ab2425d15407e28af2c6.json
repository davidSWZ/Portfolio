{"ast":null,"code":"var _jsxFileName = \"/Users/davidswiatkiewiez/Documents/Programmation/swz/Portfolio/client/src/components/cv-edit.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport SaveBtn from './saveBtn';\nimport SuppBtn from './suppBtn';\nimport AddBtn from './addBtn';\nexport default class CVEdit extends Component {\n  constructor(props) {\n    super(props);\n\n    this.addExperience = () => {\n      this.setState({\n        experience: [...this.state.experience, {\n          title: '',\n          where: '',\n          when: '',\n          description: '',\n          id: null,\n          modified: false\n        }]\n      });\n    };\n\n    this.state = {\n      experience: []\n    };\n  }\n\n  componentDidMount() {\n    let that = this;\n    axios.get(process.env.REACT_APP_API_URL + 'experience').then(res => {\n      res.data.forEach(function (experience) {\n        that.setState({\n          experience: [...that.state.experience, {\n            title: experience.title,\n            where: experience.where,\n            when: experience.when,\n            description: experience.description,\n            id: experience._id\n          }]\n        });\n      });\n    }).catch(err => {\n      console.log('A problem occured');\n    });\n  }\n\n  onChange(e, index) {\n    const eTargetName = e.target.name;\n    const newExpArray = this.state.experience.slice();\n    newExpArray[index][eTargetName] = e.target.value;\n    newExpArray[index].modified = true;\n    this.setState({\n      experience: newExpArray\n    });\n  }\n\n  handleRemove(e, index) {\n    const newExpArray = this.state.experience.slice();\n    axios.delete(process.env.REACT_APP_API_URL + 'experience/delete', {\n      data: {\n        id: this.state.experience[index].id\n      }\n    }).then(newExpArray.splice(index, 1)).then(this.setState({\n      experience: newExpArray\n    }));\n  }\n\n  onSubmit(e, index) {\n    e.preventDefault();\n    const experience = this.state.experience[index];\n    const newExpArray = this.state.experience.slice();\n    axios.post(process.env.REACT_APP_API_URL + 'experience/add', experience).then(res => {\n      newExpArray[index].modified = false;\n      this.setState({\n        experience: newExpArray\n      });\n    }).catch(function (err) {\n      console.log(err);\n    });\n  }\n\n  render() {\n    return React.createElement(\"section\", {\n      id: \"cv-edit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"section-edit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"section-edit-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \" CURRICULUM \"), this.state.experience.map((exp, index) => {\n      return React.createElement(\"div\", {\n        key: index,\n        className: \"mb-2 form-group row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"newTitle\",\n        className: \"col-form-label section-edit-label col-sm-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Titre du poste\"), React.createElement(\"input\", {\n        type: \"text\",\n        id: \"newTitle\",\n        className: \"form-control col-sm-9 input\",\n        value: exp.title,\n        name: \"title\",\n        onChange: e => {\n          this.onChange(e, index);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"newWhere\",\n        className: \"col-form-label section-edit-label col-sm-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"O\\xFA\"), React.createElement(\"input\", {\n        type: \"text\",\n        id: \"newWhere\",\n        className: \"form-control col-sm-9 input\",\n        value: exp.where,\n        name: \"where\",\n        onChange: e => {\n          this.onChange(e, index);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"newWhen\",\n        className: \"col-form-label section-edit-label col-sm-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"Quand\"), React.createElement(\"input\", {\n        type: \"text\",\n        id: \"newWhen\",\n        className: \"form-control col-sm-9 input\",\n        value: exp.when,\n        name: \"when\",\n        onChange: e => {\n          this.onChange(e, index);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"newDescription\",\n        className: \"col-form-label section-edit-label col-sm-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"Description\"), React.createElement(\"textarea\", {\n        type: \"text\",\n        id: \"newDescription\",\n        className: \"form-control col-sm-9 input\",\n        value: exp.description,\n        name: \"description\",\n        onChange: e => {\n          this.onChange(e, index);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"contain-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(SaveBtn, {\n        modified: exp.modified,\n        onSubmit: e => this.onSubmit(e, index),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }), React.createElement(SuppBtn, {\n        handleRemove: e => this.handleRemove(e, index),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      })));\n    }), React.createElement(AddBtn, {\n      addelement: this.addExperience,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/davidswiatkiewiez/Documents/Programmation/swz/Portfolio/client/src/components/cv-edit.js"],"names":["React","Component","axios","SaveBtn","SuppBtn","AddBtn","CVEdit","constructor","props","addExperience","setState","experience","state","title","where","when","description","id","modified","componentDidMount","that","get","process","env","REACT_APP_API_URL","then","res","data","forEach","_id","catch","err","console","log","onChange","e","index","eTargetName","target","name","newExpArray","slice","value","handleRemove","delete","splice","onSubmit","preventDefault","post","render","map","exp"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\nimport SaveBtn from './saveBtn';\nimport SuppBtn from './suppBtn';\nimport AddBtn from './addBtn';\n\nexport default class CVEdit extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state={\n      experience : []\n    }\n  }\n\n  componentDidMount() {\n    let that = this;\n\n    axios.get(process.env.REACT_APP_API_URL + 'experience')\n      .then(res => {\n        res.data.forEach(function(experience) {\n          that.setState({experience: [...that.state.experience,\n            { title:experience.title,\n              where:experience.where,\n              when:experience.when,\n              description:experience.description,\n              id:experience._id\n            }\n          ]})\n        });\n      })\n      .catch(err => {\n        console.log('A problem occured')\n      });\n  }\n\n\n  addExperience = () => {\n    this.setState(\n      {experience: [...this.state.experience, {\n        title:'',\n        where:'',\n        when:'',\n        description:'',\n        id:null,\n        modified: false\n      }]})\n  }\n\n  onChange(e, index) {\n    const eTargetName = e.target.name;\n    const newExpArray = this.state.experience.slice();\n    newExpArray[index][eTargetName] = e.target.value;\n    newExpArray[index].modified = true;\n    this.setState({experience: newExpArray});\n  }\n\n  handleRemove(e, index) {\n    const newExpArray = this.state.experience.slice();\n    axios.delete(process.env.REACT_APP_API_URL + 'experience/delete', {data:{id:this.state.experience[index].id}})\n    .then(\n       newExpArray.splice(index, 1)\n    )\n    .then(\n      this.setState({experience: newExpArray})\n    )\n  }\n\n  onSubmit(e, index) {\n    e.preventDefault();\n    const experience = this.state.experience[index];\n    const newExpArray = this.state.experience.slice();\n    axios.post(process.env.REACT_APP_API_URL + 'experience/add', experience)\n    .then(res => {\n      newExpArray[index].modified = false;\n      this.setState({experience: newExpArray});\n    })\n    .catch(function(err) {\n      console.log(err);\n    })\n  }\n\n  render() {\n    return (\n      <section id='cv-edit'>\n        <div className=\"section-edit\">\n          <h2 className='section-edit-title'> CURRICULUM </h2>\n            {\n              this.state.experience.map((exp, index) => {\n                return(\n                  <div key={index} className='mb-2 form-group row'>\n                      <label htmlFor='newTitle' className='col-form-label section-edit-label col-sm-2'>Titre du poste</label>\n\n                      <input  type='text'\n                              id='newTitle'\n                              className='form-control col-sm-9 input'\n                              value={exp.title}\n                              name=\"title\"\n                              onChange={(e) => {this.onChange(e, index)}}\n                              />\n                      <label htmlFor='newWhere' className='col-form-label section-edit-label col-sm-2'>Oú</label>\n\n                      <input  type='text'\n                              id='newWhere'\n                              className='form-control col-sm-9 input'\n                              value={exp.where}\n                              name=\"where\"\n                              onChange={(e) => {this.onChange(e, index)}}\n                              />\n                      <label htmlFor='newWhen' className='col-form-label section-edit-label col-sm-2'>Quand</label>\n\n                      <input  type='text'\n                              id='newWhen'\n                              className='form-control col-sm-9 input'\n                              value={exp.when}\n                              name=\"when\"\n                              onChange={(e) => {this.onChange(e, index)}}\n                              />\n                      <label htmlFor='newDescription' className='col-form-label section-edit-label col-sm-2'>Description</label>\n                      <textarea type='text'\n                                id='newDescription'\n                                className='form-control col-sm-9 input'\n                                value={exp.description}\n                                name= \"description\"\n                                onChange={(e) => {this.onChange(e, index)}}\n                              >\n                      </textarea>\n\n                      <div className=\"contain-btn\">\n                        <SaveBtn modified={exp.modified} onSubmit={(e) => this.onSubmit(e, index)}/>\n                        <SuppBtn handleRemove={(e) => this.handleRemove(e, index)} />\n                      </div>\n                  </div>\n                )\n              })\n            }\n          <AddBtn addelement= {this.addExperience} />\n        </div>\n      </section>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}